#Creating dimensions in views 
  dimension: age {
    type: number
    sql: ${TABLE}.age ;;
    drill_fields: [id]
  }
-------------
  dimension: last_name {
    type: string
    sql: ${TABLE}.last_name ;;
    hidden: yes
  }
-------------
 dimension: full_name { 

    type: string 

    sql: ${first_name} || ' , ' || ${last_name};; 

  } 
-------------
  dimension: age_group { 

    type: tier 

    tiers: [18, 25, 35, 45, 55, 65, 75, 90] 

    sql: ${age} ;; 

    style: classic 

  } 
-------------
dimension: delivery_time { 

    type: number 

    sql: DATE_DIFF(${delivered_date}, ${created_date}, day) ;; 

  } 
-------------

dimension: reporting_period { 

    sql:  

CASE  

WHEN EXTRACT(YEAR from ${created_raw}) = EXTRACT(YEAR from CURRENT_TIMESTAMP()) AND ${created_raw} < CURRENT_TIMESTAMP() 

THEN 'This Year to Date' 

WHEN EXTRACT(YEAR from ${created_raw}) + 1 = EXTRACT(YEAR from CURRENT_TIMESTAMP()) AND CAST(FORMAT_TIMESTAMP('%j', ${created_raw}) AS INT64) <= CAST(FORMAT_TIMESTAMP('%j', CURRENT_TIMESTAMP()) AS INT64) 

THEN 'Last Year to Date' 

END 

       ;;} 
----------------------------------------------

#Creating measures in views 

  measure: total_latitude { 

    type: sum 

    sql: ${latitude} ;;  } 

 

  measure: average_latitude { 

    type: average 

    sql: ${latitude} ;;  } 
-------------
measure: total_num_of_item { 

    type: sum 

    sql: ${num_of_item} ;;  } 
-------------
dimension: delivery_time { 

    type: number 

    sql: DATE_DIFF(${delivered_date}, ${created_date}, day) ;; 

  } 
-------------
  measure: average_days_to_process { 

    type: average 

    value_format_name: decimal_1 

    sql: ${delivery_time} ;; 

  } 
-------------
 dimension: gross_margin { 

    type: number 

    value_format_name: usd 

    sql: ${sale_price} - ${inventory_items.cost} ;; 

  } 
-------------
  measure: total_gross_margin { 

    type: sum 

    value_format_name: usd 

    sql: ${gross_margin} ;; 

    drill_fields: [detail*] 

  } 
-------------
 measure: total_gross_margin_percentage { 

    type: number 

    value_format_name: percent_2 

    sql: 1.0 * ${total_gross_margin}/ nullif(${total_sale_price},0) ;; 

  } 
----------------------------------------------

#Describing data in LookML views 

  measure: total_gross_margin_percentage {
    label: "Gross Margin %"
    group_label: "Revenue section"
    description: "A KPI that shows the percentage of the gross margin"
    type: number
    value_format_name: percent_2
    sql: 1.0 * ${total_gross_margin}/ nullif(${total_sale_price},0) ;;
    tags: ["sales", "orders", "revenue"]
  }

  measure: average_sale_price {
    group_label: "Revenue section"
    order_by_field: total_gross_margin_percentage
   # group_item_label: "Price"
    type: average
    value_format:"$#.0;($#.0)"
    sql: ${sale_price} ;;  }

----------------------------------------------

#Working with filters in LookML views 

dimension: is_sold { 

    type: yesno 

    sql: ${sold_raw} is not null ;; 

  } 
-------------
  measure: sold_count { 

    type: count 

     

    filters: { 

      field: is_sold 

      value: "Yes" 

    } 

  } 
-------------
measure: sold_percent { 

    type: number 

    value_format_name: percent_2 

    sql: 1.0 * ${sold_count}/(CASE WHEN ${count} = 0 THEN NULL ELSE ${count} END) ;; 

  } 
-------------
view: view_name { 
  measure: field_name { 
    filters: [dimension_name: "filter expression", dimension_name: "filter expression", ... ] 
  } 
} 
-------------
# Joining tables in models 
explore: distribution_centers { 

  label: "DC" 

} 
-------------
explore: products { 

  join: distribution_centers { 

    type: left_outer  

    sql_on: ${products.distribution_center_id} = ${distribution_centers.id} ;; 

    relationship: many_to_one 

  } 

} 

-------------

named_value_format: percent_with_no_decimals { 
  value_format: "0\%" 
 
}
-------------

measure: sold_percent { 

    type: number 

    value_format_name: percent_with_no_decimals 

    sql: 1.0 * ${sold_count}/(CASE WHEN ${count} = 0 THEN NULL ELSE ${count} END) ;; 

  } 
#Working with LookML files 
{ 

  "name": "Nombre", 

  "id": "Identificador", 

  "order": "Orden", 

  "country": "PaÃ­s", 

  "product": "Producto", 

} 
----------
localization_settings: { 

  default_locale: en 

  localization_level: permissive 

} 
----------------------------------------------
#Working with geodata in lookml 
view: users_france { 

derived_table: { 

    sql: 

    SELECT * 

    FROM users 

    WHERE country = "France" 

    ;; 

  } 
-------------
explore: users_france {} 
-------------
map_layer: communes { 

  file: "/communes.topojson" 

  format: topojson 
} 
-------------
  dimension: city { 

    type: string 

    sql: ${TABLE}.city ;; 

    map_layer_name: communes 

  } 
-------------
  dimension: dc_location { 

    type: location 

    sql_latitude: ${TABLE}.latitude ;; 

    sql_longitude: ${TABLE}.longitude ;; 

  } 
-------------
  dimension: users_location { 

    type: location 

    sql_latitude: ${TABLE}.latitude ;; 

    sql_longitude: ${TABLE}.longitude ;; 

  } 
-------------
  dimension: distance_to_DCs { 

    type: distance 

start_location_field:distribution_centers.dc_location 

end_location_field:users_location 

    units: kilometers 

  } 
-------------



----------------------------------------------
#Reusing the lookml code 
include: "users.view" 

view: users_statistics { 

  extends: [users] 

  

  measure: count_percent_of_total { 

    label: "Count (Percent of Total)" 

    type: percent_of_total 

    sql: ${count} ;; 

    drill_fields: [detail*] 

  } 

  

  measure: average_age { 

    type: average 

    value_format_name: decimal_2 

    sql: ${age} ;; 

    drill_fields: [detail*] 

  } 

} 

-------------

view: +distribution_centers { 
  dimension: latitude { 
    hidden: yes 
  } 
} 

 





